package cn.stylefeng.guns.modular.hhsys.controller;

import cn.stylefeng.guns.base.pojo.page.LayuiPageInfo;
import cn.stylefeng.guns.modular.hhsys.entity.CityResource;
import cn.stylefeng.guns.modular.hhsys.entity.ServiceInfo;
import cn.stylefeng.guns.modular.hhsys.entity.ServiceMatedata;
import cn.stylefeng.guns.modular.hhsys.model.params.CityResourceParam;
import cn.stylefeng.guns.modular.hhsys.service.CityResourceService;
import cn.stylefeng.guns.modular.hhsys.service.ServiceMatedataService;
import cn.stylefeng.guns.modular.hhsys.service.TokenService;
import cn.stylefeng.guns.modular.hhsys.utils.ServiceUtil;
import cn.stylefeng.roses.core.base.controller.BaseController;
import cn.stylefeng.roses.kernel.model.response.ResponseData;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Map;
import java.util.UUID;


/**
 * 控制器
 *
 * @author lls
 * @Date 2020-11-03 09:35:52
 */
@Controller
@RequestMapping("/cityResource")
public class CityResourceController extends BaseController {

    private String PREFIX = "/cityResource";

    @Autowired
    private CityResourceService cityResourceService;

    @Autowired
    private TokenService tokenService;

    @Autowired
    private ServiceMatedataService serviceMatedataService;

    /**
     * 跳转到主页面-申请清单
     *
     * @author lls
     * @Date 2020-11-03
     */
    @RequestMapping("")
    public String index() {
        return PREFIX + "/cityResource.html";
    }

    /**
     * 跳转到主页面-资源管理
     *
     * @author lls
     * @Date 2020-11-03
     */
    @RequestMapping("manager")
    public String indexManager() {
        return PREFIX + "/cityResourceManager.html";
    }

    /**
     * 跳转到主页面-审核清单
     *
     * @author lls
     * @Date 2020-11-03
     */
    @RequestMapping("verity")
    public String indexVerity() {
        return PREFIX + "/cityResourceVerity.html";
    }

    /**
     * 新增页面
     *
     * @author lls
     * @Date 2020-11-03
     */
    @RequestMapping("/add")
    public String add() {
        return PREFIX + "/cityResource_add.html";
    }

    /**
     * 编辑页面
     *
     * @author lls
     * @Date 2020-11-03
     */
    @RequestMapping("/edit")
    public String edit() {
        return PREFIX + "/cityResource_edit.html";
    }

    /**
     * 新增接口
     *
     * @author lls
     * @Date 2020-11-03
     */
    @RequestMapping("/addItem")
    @ResponseBody
    public ResponseData addItem(@RequestBody Map<String,Object> params) throws ParseException {

        String userId = params.get("publishUserid").toString();
        String resourceId = UUID.randomUUID().toString();
        String resourceType = params.get("resourceType").toString();

        CityResourceParam cityResourceParam = new CityResourceParam();
        cityResourceParam.setState(0);
        cityResourceParam.setId(resourceId);
        cityResourceParam.setPublishdate(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(params.get("publishDate").toString()));
        cityResourceParam.setAliasname(params.get("resourceAliasName").toString());
        cityResourceParam.setResourcetype(resourceType);
        cityResourceParam.setAbstractValue(params.get("resourceAbstract").toString());
        cityResourceParam.setKeyword(params.get("resourceKeyword").toString());
        cityResourceParam.setPublishuserid(userId);
        cityResourceParam.setName(params.get("resourceName").toString());
        cityResourceParam.setRunstate(Integer.valueOf( params.get("resourceRunstate").toString()));
        this.cityResourceService.add(cityResourceParam);

        ServiceInfo serviceInfo = new ServiceInfo();
        switch (resourceType){
            case "001":
                serviceInfo = ServiceUtil.getWMSBaseInfo(params.get("resourceAddress").toString());
                break;
            case "002":
                serviceInfo = ServiceUtil.getWMTSBaseInfo(params.get("resourceAddress").toString());
                break;
            case "004":
                serviceInfo = ServiceUtil.getWFSBaseInfo(params.get("resourceAddress").toString());
                break;
            case "005":
                serviceInfo = ServiceUtil.getWCSBaseInfo(params.get("resourceAddress").toString());
            case "007":
            case "008":
                serviceInfo = ServiceUtil.getMAPSERVERBaseInfo(params.get("resourceAddress").toString());
                break;
            case "009":
            case "0026":
            case "0027":
        }

//        ServiceInfo serviceInfo = ServiceUtil.getMAPSERVERBaseInfo(params.get("resourceAddress").toString());
        ServiceMatedata serviceMatedata = serviceInfo.getServiceMetaData();
        serviceMatedata.setResourceid(resourceId);
        serviceMatedata.setTele(params.get("phoneNumber").toString());
        serviceMatedata.setSubjectType(params.get("fieldSubject").toString());
        serviceMatedata.setOtherDescription(params.get("layerField").toString());

        this.serviceMatedataService.add(serviceMatedata);

        this.tokenService.add(resourceId,userId);
        return ResponseData.success();
    }

    /**
     * 编辑接口
     *
     * @author lls
     * @Date 2020-11-03
     */
    @RequestMapping("/editItem")
    @ResponseBody
    public ResponseData editItem(CityResourceParam cityResourceParam) {
        this.cityResourceService.update(cityResourceParam);
        return ResponseData.success();
    }

    /**
     * 删除接口
     *
     * @author lls
     * @Date 2020-11-03
     */
    @RequestMapping("/delete")
    @ResponseBody
    public ResponseData delete(CityResourceParam cityResourceParam) {
        this.cityResourceService.delete(cityResourceParam);
        return ResponseData.success();
    }

    /**
     * 查看详情接口
     *
     * @author lls
     * @Date 2020-11-03
     */
    @RequestMapping("/detail")
    @ResponseBody
    public ResponseData detail(CityResourceParam cityResourceParam) {
        CityResource detail = this.cityResourceService.getById(cityResourceParam.getId());
        return ResponseData.success(detail);
    }

    /**
     * 查询列表
     *
     * @author lls
     * @Date 2020-11-03
     */
    @ResponseBody
    @RequestMapping(value = "/searchLst", method =  RequestMethod.GET)
    public LayuiPageInfo searchList(@RequestParam(value = "state") String state, @RequestParam(value = "name") String name) {
        CityResourceParam cityResourceParam = new CityResourceParam();
        cityResourceParam.setState(Integer.valueOf(state));
        cityResourceParam.setName(name);
        return this.cityResourceService.findPageBySpec(cityResourceParam);
    }

    /**
     * 渲染列表
     *
     * @author lls
     * @Date 2020-11-03
     */
    @ResponseBody
    @RequestMapping(value = "/list", method =  RequestMethod.GET)
    public LayuiPageInfo list(@RequestParam(value = "state") String state) {
        CityResourceParam cityResourceParam = new CityResourceParam();
        cityResourceParam.setState(Integer.valueOf(state));
        return this.cityResourceService.findPageBySpec(cityResourceParam);
    }

}


